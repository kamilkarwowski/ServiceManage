@model IEnumerable<ServiceManagement.Models.Zadanie>

@{
    ViewData["Title"] = "Ukończone zadania";
}

<h1>Ukończone zadania</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                Nazwa zadania:
            </th>
            <th>
                Opis zadania:
            </th>
            
            <th>
                Data deadline'u:
            </th>

            <th>
                Status Zadania:
            </th> 
            <th>
               Szczegóły:
            </th>
            
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            @if (User.IsInRole("Serwisant") && (int.Parse(User.Claims.Where(u => u.Type.Contains("nameidentifier")).FirstOrDefault().Value) == item.UserId || User.IsInRole("Admin")))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Deadline)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.StatusZadania)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-file-earmark-fill" viewBox="0 0 16 16">
                                <path d="M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3z" />
                            </svg>
                        </a>
                    </td>

                </tr>
            }
           
}
    </tbody>
</table>
